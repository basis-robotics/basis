name: Build basis

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-container:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: 'Login to GitHub Container Registry'
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{github.actor}}
        password: ${{secrets.GITHUB_TOKEN}}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    # TODO: use proper tags
    - name: Build and push Docker image
      uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
      with:
        context: .
        file: ./docker/Dockerfile
        push: true
        target: basis-env
        tags: ghcr.io/basis-robotics/basis-env:latest


  build-test:
    runs-on: ubuntu-latest
    needs: build-container
    # strategy:
    #   matrix:
    #     configuration:
    #       - image: basis-env
    #       - image: basis-env-ros
    #         cmake-options: BASIS_ENABLE_ROS=1

    container:
      image: ghcr.io/basis-robotics/basis-env:latest
      volumes:
        - ${{ github.workspace }}:/basis
    steps:
      - name: Test command
        run: ls /basis
    # - name: Upgrade compiler
    #   run: sudo bash -c "$(wget -O - https://apt.llvm.org/llvm.sh)" && clang++-18 --version
    # - name: Install deps
    #   run: sudo apt install -y libprotobuf-dev protobuf-compiler
    # - name: Configure CMake
    #   run: >
    #     cmake -B ${{ steps.strings.outputs.build-output-dir }}
    #     -DCMAKE_CXX_COMPILER=clang++-18
    #     -S ${{ github.workspace }}

    # - name: Build
    #   # Build your program with the given configuration. Note that --config is needed because the default Windows generator is a multi-config generator (Visual Studio generator).
    #   run: cmake --build ${{ steps.strings.outputs.build-output-dir }} --config ${{ matrix.build_type }} -j

    # - name: Test
    #   working-directory: ${{ steps.strings.outputs.build-output-dir }}
    #   # Execute tests defined by the CMake configuration. Note that --build-config is needed because the default Windows generator is a multi-config generator (Visual Studio generator).
    #   # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
    #   run: ctest --build-config ${{ matrix.build_type }}
