name: Build basis
permissions:
  packages: write
  contents: read

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-container:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: 'Login to GitHub Container Registry'
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{github.actor}}
        password: ${{secrets.GITHUB_TOKEN}}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    # TODO: use proper tags
    - name: Build and push base image
      uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
      with:
        context: .
        file: ./docker/Dockerfile
        push: true
        target: basis-env
        tags: ghcr.io/basis-robotics/basis-env:${{ github.sha }}
        cache-from: type=gha
        # cache-to: type=gha,mode=max
    - name: Build and push ROS image
      uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
      with:
        context: .
        file: ./docker/Dockerfile
        push: true
        target: basis-env-ros
        tags: ghcr.io/basis-robotics/basis-env-ros:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

  build-test:
    runs-on: ubuntu-latest
    needs: build-container
    # strategy:
    #   matrix:
    #     configuration:
    #       - image: basis-env
    #       - image: basis-env-ros
    #         cmake-options: BASIS_ENABLE_ROS=1

    container:
      image: ghcr.io/basis-robotics/basis-env:${{ github.sha }}
      options: --user basis

    steps:
      - run: pwd
      - run: ls -al
      - uses: actions/checkout@v4

      - name: Configure CMake
        run: >
          cmake -B /basis/build
          -DCMAKE_CXX_COMPILER=clang++-18
          -S /basis

      - name: Build
        run: cmake --build /basis/build -j

      - name: Test
        working-directory: /basis/build
        run: ctest

