name: Build basis

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-container:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    # TODO: gha actions cache --cache-to type=gha[,parameters...] --cache-from type=gha[,parameters...]
    - name: Build image
      run: ${{ github.workspace }}/docker/build-env.sh
  build-test:
    runs-on: ubuntu-latest
    container:
      image: basis-env
      volumes:
        - ${{ github.workspace }}:/basis
    steps:
      - name: Test command
        run: ls /basis
    # - name: Upgrade compiler
    #   run: sudo bash -c "$(wget -O - https://apt.llvm.org/llvm.sh)" && clang++-18 --version
    # - name: Install deps
    #   run: sudo apt install -y libprotobuf-dev protobuf-compiler
    # - name: Configure CMake
    #   run: >
    #     cmake -B ${{ steps.strings.outputs.build-output-dir }}
    #     -DCMAKE_CXX_COMPILER=clang++-18
    #     -S ${{ github.workspace }}

    # - name: Build
    #   # Build your program with the given configuration. Note that --config is needed because the default Windows generator is a multi-config generator (Visual Studio generator).
    #   run: cmake --build ${{ steps.strings.outputs.build-output-dir }} --config ${{ matrix.build_type }} -j

    # - name: Test
    #   working-directory: ${{ steps.strings.outputs.build-output-dir }}
    #   # Execute tests defined by the CMake configuration. Note that --build-config is needed because the default Windows generator is a multi-config generator (Visual Studio generator).
    #   # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
    #   run: ctest --build-config ${{ matrix.build_type }}
