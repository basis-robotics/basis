# TODO: don't do this, use the file name?
# the default name of the unit
# name: example

# The ways handlers are allowed to interact with eachother 
threading_model:
  # single - by default all handlers run mutually exclusive from eachother
  # multi - by default all handlers run in parallel
  single
cpp_includes:
  - sensor_msgs/Image.h
  - sensor_msgs/PointCloud2.h
  - test.pb.h
  - basis_example.pb.h

handlers:
  # This handler looks for two image messages coming in with the same timestamp and outputs one stereo image
  StereoMatch:
    sync:
      # require exact field matching
      type: equal
      # buffer at most 2 messages on each channel before dropping
      buffer_size: 2
    inputs:
      /camera_left:
        # TODO: we may end up allowing the `rosmsg:` field to be dropped, either by doing a search in the schemas
        # or by allowing a default serializer to be specified
        type: rosmsg:sensor_msgs::Image
        # TODO: We may end up providing default sync_fields for some serializer or message types to reduce boilerplate
        sync_field: header
      /camera_right:
        type: rosmsg:sensor_msgs::Image
        sync_field: header
    outputs:
      /difference_image:
        type: rosmsg:sensor_msgs::Image
  TimeTest:
    sync:
      type: all
    inputs:
      /time_test:
        type: "protobuf: ::TimeTest"
      /time_test_forwarded:
        type: "protobuf: ::TimeTest"
    outputs:
      /time_test_forwarded_2:
        type: "protobuf: ::TimeTest"
  ApproxTest:
    sync:
      type: 
        approximate: 0.01
    inputs:
      /stamped_vector:
        type: protobuf:ExampleStampedVector
      /point_cloud:
        type: rosmsg:sensor_msgs::PointCloud2
  
