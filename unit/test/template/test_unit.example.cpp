/*

  DO NOT EDIT THIS FILE

  This is a template for use with your Unit, to use as a base, provided as an example.

*/

#include <test_unit.h>

using namespace unit::test_unit;


StereoMatch::Output test_unit::StereoMatch(const StereoMatch::Input& input) {
    static_assert(false, "Implement me");
}

AllTest::Output test_unit::AllTest(const AllTest::Input& input) {
    static_assert(false, "Implement me");
}

ApproxTest::Output test_unit::ApproxTest(const ApproxTest::Input& input) {
    static_assert(false, "Implement me");
}

TestEqualOptions::Output test_unit::TestEqualOptions(const TestEqualOptions::Input& input) {
    static_assert(false, "Implement me");
}

TestInprocTypePub::Output test_unit::TestInprocTypePub(const TestInprocTypePub::Input& input) {
    static_assert(false, "Implement me");
}

TestInprocTypeSubA::Output test_unit::TestInprocTypeSubA(const TestInprocTypeSubA::Input& input) {
    static_assert(false, "Implement me");
}

TestInprocTypeSubB::Output test_unit::TestInprocTypeSubB(const TestInprocTypeSubB::Input& input) {
    static_assert(false, "Implement me");
}

TestInprocTypeSubC::Output test_unit::TestInprocTypeSubC(const TestInprocTypeSubC::Input& input) {
    static_assert(false, "Implement me");
}
